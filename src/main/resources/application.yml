logging:
  level:
    org:
      springframework:
        security: TRACE
spring:
  datasource:
    url: jdbc:postgresql://${BANCO_URL:localhost:5432/proposta}
    driverClassName: org.postgresql.Driver
    username: ${BANCO_USR:keycloak}
    password: ${BANCO_PSW:password}
    validationQuery: SELECT 1
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
feign:
  client:
    config:
      solicitacao:
        read-timeout: ${SOLICITACOES_READ_TIMEOUT:1000}
        connect-timeout: ${SOLICITACOES_CONNECT_TIMEOUT:1000}
      cartao:
        read-timeout: ${CARTOES_READ_TIMEOUT:1000}
        connect-timeout: ${CARTOES_CONNECT_TIMEOUT:1000}
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: metrics, health, prometheus
    prometheus:
      enable: true
  metrics:
    export:
      prometheus:
        enable: true
    tags:
      aplicacao: ${NOME_DA_APLICACAO:proposta}
      ambiente: ${AMBIENTE:dev}
opentracing:
  jaeger:
    enable: ${JAEGER_ENABLED:true}
    service-name: ${NOME_DA_APLICACAO:proposta}
    http-sender:
      url: ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
    probabilistic-sampler:
      sampling-rate: 1
  spring:
    cloud:
      feign:
        enabled: false
security:
  aes-secret: ${SECRET:0123456789abcdef}
externo:
  solicitacao: ${SOLICITACOES_URL:http://localhost:9999/api/solicitacao}
  cartao: ${CARTOES_URL:http://localhost:8888/api/cartoes}
periodicidade:
  schendule:
    proposta-cartao: ${SCHENDULE_PROPOSTA_CARTAO:10000}
